name: Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Update Package Manager
        run:  sudo apt-get update
      - name: Install Kubernetes
        run:  |
                echo 'Installing dependencies.'
                sudo apt-get install -y apt-transport-https
                echo 'Downloading Google Cloud public signing key.'
                sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
                echo 'Adding Kubernetes apt repository.' &&
                echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
                echo 'Updating package index with new repository.'
                sudo apt-get update
                echo 'Installing Kubernetes.'
                sudo apt-get install -y kubectl
                kubectl version
      - name: Install DigitalOcean
        run:  |
          echo 'Installing DigitalOcean'
          wget https://github.com/digitalocean/doctl/releases/download/v1.58.0/doctl-1.58.0-linux-amd64.tar.gz
          tar xf ./doctl-1.58.0-linux-amd64.tar.gz
          sudo mv ./doctl /usr/local/bin
      - name: Set-up DigitalOcean
        run:  doctl auth init -t ${{ secrets.DO_API_TOKEN }}
      - name: Configure Kubernetes
        run:  doctl kubernetes cluster kubeconfig save ${{ secrets.KUBERNETES_CLUSTER_NAME }}
      - name: Create Namespace
        run:  kubectl create namespace atat --dry-run=client -o yaml | kubectl apply --namespace=atat -f -
      - name: Create MongoDB Admin Secret
        run:  kubectl create secret generic mongodb-admin --from-literal='password=${{ secrets.MONGODB_ADMIN_PASSWORD }}' --save-config --dry-run=client -o yaml | kubectl apply --namespace=atat -f -
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install MongoDB Operator
        run:  |
          git clone https://github.com/mongodb/mongodb-kubernetes-operator.git
          kubectl apply -f config/crd/bases/mongodbcommunity.mongodb.com_mongodbcommunity.yaml
          kubectl get crd/mongodbcommunity.mongodbcommunity.mongodb.com
          kubectl apply -k config/rbac/ --namespace=atat
          kubectl create -f config/manager/manager.yaml --namespace=atat
          kubectl get pods --namespace=atat
      - name: Deploy MongoDB Replica Set
        run:  kubectl apply -f ./.docker/.mongodb/deployment.yaml --namespace=atat
      - name: Install RabbitMQ Operator
        run:  kubectl apply -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml" --namespace=atat
      - name: Deploy RabbitMQ Replica Set
        run: kubectl apply -f ./.docker/.rabbitmq/deployment.yaml --namespace=atat